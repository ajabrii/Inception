[www]
# Pool name - defines a group of PHP-FPM worker processes
# This matches the pool referenced in nginx fastcgi_pass

user = www-data
# Unix user that PHP-FPM processes will run as
# www-data is the standard web server user in Debian/Ubuntu

group = www-data
# Unix group that PHP-FPM processes will run as
# Matches the user for consistent permissions

listen = wordpress:9000
# Network socket PHP-FPM listens on for requests
# 'wordpress' is the container hostname, port 9000 is PHP-FPM standard
# This matches your nginx fastcgi_pass wordpress:9000

listen.owner = www-data
# Owner of the listening socket (not used for network sockets)
# Only relevant for Unix domain sockets

listen.group = www-data
# Group of the listening socket (not used for network sockets)
# Only relevant for Unix domain sockets

pm = dynamic
# Process manager type: dynamic = creates/destroys processes based on demand
# Other options: static, ondemand

pm.max_children = 5
# Maximum number of child processes that can exist simultaneously
# Limits memory usage - good for containers with limited resources

pm.start_servers = 2
# Number of child processes to start when PHP-FPM starts
# Should be between min_spare_servers and max_spare_servers

pm.min_spare_servers = 1
# Minimum number of idle processes to keep running
# Ensures quick response to new requests

pm.max_spare_servers = 3
# Maximum number of idle processes to keep running
# Prevents too many idle processes consuming memory

chdir = /
# Directory to change to when starting each process
# Root directory is fine for WordPress

; Optional but recommended for better debugging
catch_workers_output = yes
# Captures output from worker processes to PHP-FPM logs
# Helpful for debugging WordPress issues